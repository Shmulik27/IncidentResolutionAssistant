name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  go-backend:
    name: Go Backend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Clean Go build cache
        run: |
          cd backend/go-backend
          go clean -cache -modcache -testcache -x

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.57.2
          working-directory: backend/go-backend

      - name: Test
        run: |
          cd backend/go-backend
          go test ./...

      - name: Build Docker image
        run: |
          cd backend/go-backend
          docker build -t yourdockerhubuser/go-backend:${{ github.sha }} .

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push yourdockerhubuser/go-backend:${{ github.sha }}

  python-services:
    name: Python Services CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - log_analyzer
          - action_recommender
          - knowledge_base
          - root_cause_predictor
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install ruff and pytest
        run: |
          pip install ruff pytest

      - name: Install dependencies
        run: |
          if [ -f backend/python-services/${{ matrix.service }}/requirements.txt ]; then
            python -m pip install -r backend/python-services/${{ matrix.service }}/requirements.txt
          fi

      - name: Lint
        run: |
          cd backend/python-services/${{ matrix.service }}
          ruff check .

      - name: Test
        run: |
          cd backend/python-services/${{ matrix.service }}
          pytest

      - name: Build Docker image
        run: |
          cd backend/python-services/${{ matrix.service }}
          docker build -t yourdockerhubuser/${{ matrix.service }}:${{ github.sha }} .

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push yourdockerhubuser/${{ matrix.service }}:${{ github.sha }} 